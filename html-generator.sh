#!/bin/bash
#
# A simple Shell HTML Generator by Jan Cordeiro
# V1.0

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
CYAN='\033[0;36m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Function to display logo
display_logo() {
    clear
    echo -e "${YELLOW}"
    echo "===================================================================="
	echo "‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà    ‚ñà‚ñà‚ñà ‚ñà‚ñà             ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà    ‚ñà‚ñà"
	echo "‚ñà‚ñà   ‚ñà‚ñà    ‚ñà‚ñà    ‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà            ‚ñà‚ñà       ‚ñà‚ñà      ‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà"
	echo "‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà  ‚ñà‚ñà"
	echo "‚ñà‚ñà   ‚ñà‚ñà    ‚ñà‚ñà    ‚ñà‚ñà  ‚ñà‚ñà  ‚ñà‚ñà ‚ñà‚ñà            ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà  ‚ñà‚ñà ‚ñà‚ñà"
	echo "‚ñà‚ñà   ‚ñà‚ñà    ‚ñà‚ñà    ‚ñà‚ñà      ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà        ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà"
	echo "===================================================================="
    echo "HTML Generator by Jan Cordeiro ‚ö° - V1.0"
    echo "===================================================================="
    echo -e "${NC}"
}

# Function to generate HTML
generate_html() {
    clear
    display_logo
    echo -e "${YELLOW}üöÄ Generate HTML Template${NC}"
    echo ""
    echo "Choose your CSS Framework:"
    echo "1. Bootstrap 5"
    echo "2. Tailwind CSS"
    echo "3. CSS Vanilla"
    read -p "Choice [1-3]: " framework

    case $framework in
        1)
            css_link="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
            js_link="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"
            ;;
        2)
            css_link="https://cdn.jsdelivr.net/npm/tailwindcss@3.3.2/dist/tailwind.min.css"
            js_link=""
            ;;
        3)
            css_link=""
            js_link=""
            ;;
        *)
            echo "Invalid choice. Returning to menu..."
            read -p "Press Enter to continue..."
            return
            ;;
    esac

    # Ask for info
    echo -n "Page Title: "
    read page_title
    echo -n "Page Description: "
    read page_description
    echo -n "Author Name: "
    read author_name

    echo ""
    echo "Do you want some sample content?"
    echo "1. Yes"
    echo "2. No"
    read -p "Choice [1-2]: " sample_choice

    if [[ "$sample_choice" == "1" ]]; then
        sample_content="<h1>Hello, World! üåç</h1><p>This is a sample page generated by HTML Generator.</p>"
    else
        sample_content=""
    fi

    # Ask where to save
    echo -n "Enter folder path to save the HTML (default: current folder): "
    read folder_path

    if [[ -z "$folder_path" ]]; then
        folder_path="."
    fi

    output_file="$folder_path/generated_page.html"

    # Check if file exists
    if [ -f "$output_file" ]; then
        echo -e "${RED}‚ö†Ô∏è Warning: The file '$output_file' already exists.${NC}"
        echo "1. Overwrite"
        echo "2. Enter a new file name"
        echo "3. Cancel"
        echo -n "Choice [1-3]: "
        read file_choice

        case $file_choice in
            1)
                echo "Overwriting file..."
                ;;
            2)
                echo -n "Enter new file name (with .html extension): "
                read new_filename
                output_file="$folder_path/$new_filename"
                ;;
            3)
                echo "Cancelled."
                read -p "Press Enter to return to menu..."
                return
                ;;
            *)
                echo "Invalid choice, cancelling."
                read -p "Press Enter to return to menu..."
                return
                ;;
        esac
    fi

    # Try to create the file using sudo if necessary
    if ! touch "$output_file" 2>/dev/null; then
        echo -e "${RED}‚õî Permission denied to create file at $output_file.${NC}"
        echo "Trying with sudo..."
        sudo bash -c "cat > '$output_file'" <<EOF
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="$page_description">
    <meta name="author" content="$author_name">
    <title>$page_title</title>
    $(if [[ -n "$css_link" ]]; then echo "<link rel=\"stylesheet\" href=\"$css_link\">"; fi)
    $(if [[ -n "$js_link" ]]; then echo "<script src=\"$js_link\"></script>"; fi)
</head>
<body>
    $sample_content
</body>
</html>
EOF
    else
        cat > "$output_file" <<EOF
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="$page_description">
    <meta name="author" content="$author_name">
    <title>$page_title</title>
    $(if [[ -n "$css_link" ]]; then echo "<link rel=\"stylesheet\" href=\"$css_link\">"; fi)
    $(if [[ -n "$js_link" ]]; then echo "<script src=\"$js_link\"></script>"; fi)
</head>
<body>
    $sample_content
</body>
</html>
EOF
    fi

    echo -e "${GREEN}‚úÖ HTML file created at: $output_file${NC}"
    read -p "Press Enter to return to menu..."
}

# Function to display About info
about_info() {
    clear
    display_logo
    echo -e "${YELLOW}üìñ About HTML Generator${NC}"
    echo ""
    echo "This is a simple Shell Bash HTML Generator."
    echo "You can create basic HTML templates using Bootstrap 5, Tailwind CSS or pure CSS Vanilla."
    echo "Website: https://jancordeiro.github.io/html-generator"
    echo ""
    echo "Author: Jan Cordeiro üë§"
    echo "Mastodon: https://mastodon.world/@jancordeiro"
    echo "GitHub: https://github.com/jancordeiro"
    echo ""
    echo "Open Source üíª, free to use and modify."
    read -p "Press Enter to return to menu..."
}

# Function to display Donate info
donate_info() {
    clear
    display_logo
    echo -e "${YELLOW}üí∞ Donate & Support${NC}"
    echo ""
    echo "Support this project by donating:"
    echo "BTC (On-chain): bc1qexamplebtcaddress1234567890"
    echo "‚ö° Lightning Network: lnurl1examplelightningaddress"
    echo ""
    echo "Thank you for your support! üôè"
    read -p "Press Enter to return to menu..."
}

# Main loop
while true; do
    display_logo
    echo -e "${GREEN}1. üõ†Ô∏è Generate HTML"
    echo "2. üìñ About"
    echo "3. üí∞ Donate"
    echo "4. ‚ùå Exit"
    echo -e "${NC}"
    read -p "Select an option [1-4]: " option

    case $option in
        1)
            generate_html
            ;;
        2)
            about_info
            ;;
        3)
            donate_info
            ;;
        4)
            echo "Goodbye! üëã"
            break
            ;;
        *)
            echo "Invalid option, try again."
            sleep 1
            ;;
    esac
done
